<?xml version="1.0"?>
<configuration>
	<configSections>
		<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler" requirePermission="false"/>
		<sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
			<section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" />
			<section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" />
			<section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
			<section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
		</sectionGroup>
	</configSections>

	<!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
	     which is necessary for OpenID urls with unicode characters in the domain/host name. 
	     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
	<uri>
		<idn enabled="All"/>
		<iriParsing enabled="true"/>
	</uri>

	<system.net>
		<defaultProxy enabled="true" />
		<settings>
			<!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. -->
			<!--<servicePointManager checkCertificateRevocationList="true"/>-->
		</settings>
	</system.net>

	<!-- this is an optional configuration section where aspects of DotNetOpenAuth can be customized -->
	<dotNetOpenAuth>
		<openid>
			<provider>
				<security requireSsl="false" />
				<behaviors>
					<!-- Behaviors activate themselves automatically for individual matching requests. 
					     The first one in this list to match an incoming request "owns" the request.  If no
					     profile matches, the default behavior is assumed. -->
					<!--<add type="DotNetOpenAuth.OpenId.Provider.Behaviors.PpidGeneration, DotNetOpenAuth.OpenId.Provider" />-->
				</behaviors>
				<!-- Uncomment the following to activate the sample custom store.  -->
				<!--<store type="OpenIdProviderWebForms.Code.CustomStore, OpenIdProviderWebForms" />-->
			</provider>
		</openid>
		<messaging>
			<untrustedWebRequest>
				<whitelistHosts>
					<!-- since this is a sample, and will often be used with localhost -->
					<add name="localhost"/>
				</whitelistHosts>
			</untrustedWebRequest>
		</messaging>
		<!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
		<reporting enabled="true" />
	</dotNetOpenAuth>

	<appSettings>
		<!-- Get your own Yubico API key here: https://upgrade.yubico.com/getapikey/ -->
		<add key="YubicoAPIKey" value="3961"/>

		<add key="ValidationSettings:UnobtrusiveValidationMode" value="None" />
	</appSettings>

	<system.web>
		<httpRuntime targetFramework="4.5" />
		<!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
		<compilation debug="true" targetFramework="4.0" />
		<sessionState mode="InProc" cookieless="false"/>
		<membership defaultProvider="AspNetReadOnlyXmlMembershipProvider">
			<providers>
				<clear/>
				<add name="AspNetReadOnlyXmlMembershipProvider" type="OpenIdProviderWebForms.Code.ReadOnlyXmlMembershipProvider" description="Read-only XML membership provider" xmlFileName="~/App_Data/Users.xml"/>
			</providers>
		</membership>
		<authentication mode="Forms">
			<!-- named cookie prevents conflicts with other samples -->
			<forms name="OpenIdProviderWebForms"/>
		</authentication>
		<customErrors mode="RemoteOnly"/>
		<!-- Trust level discussion:
		Full: everything works (this is required for Google Apps for Domains support)
		High: TRACE compilation symbol must NOT be defined
		Medium: doesn't work unless originUrl=".*" or WebPermission.Connect is extended, and Google Apps doesn't work.
		Low: doesn't work because WebPermission.Connect is denied.
		-->
		<trust level="Full" originUrl=".*"/>
		<pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
	</system.web>
	<location path="decide.aspx">
		<system.web>
			<authorization>
				<deny users="?"/>
			</authorization>
		</system.web>
	</location>
	<!-- log4net is a 3rd party (free) logger library that DotNetOpenAuth will use if present but does not require. -->
	<log4net>
		<appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
			<file value="Provider.log"/>
			<appendToFile value="true"/>
			<rollingStyle value="Size"/>
			<maxSizeRollBackups value="10"/>
			<maximumFileSize value="100KB"/>
			<staticLogFileName value="true"/>
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date (GMT%date{%z}) [%thread] %-5level %logger - %message%newline"/>
			</layout>
		</appender>
		<appender name="TracePageAppender" type="OpenIdProviderWebForms.Code.TracePageAppender, OpenIdProviderWebForms">
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date (GMT%date{%z}) [%thread] %-5level %logger - %message%newline"/>
			</layout>
		</appender>
		<!-- Setup the root category, add the appenders and set the default level -->
		<root>
			<level value="INFO" />
			<!--<appender-ref ref="RollingFileAppender" />-->
			<appender-ref ref="TracePageAppender" />
		</root>
		<!-- Specify the level for some specific categories -->
		<logger name="DotNetOpenAuth">
			<level value="INFO"/>
		</logger>
	</log4net>
	<runtime>
		<legacyHMACWarning enabled="0"/>
	</runtime>
	<system.webServer>
		<modules runAllManagedModulesForAllRequests="true"/>
	</system.webServer>
</configuration>